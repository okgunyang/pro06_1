
	1. 프로젝트 기획 -> 기획서
	- 어떠한 프로젝트가 진행되는가?
	
	2. 프로젝트 환경(운영환경+개발환경) -> 프로젝트 환경 분석서
	- 무엇으로 프로젝트를 진행할 것인가?
	프론트엔드 언어 : html5+css3+javascript+jQuery
	백엔드 언어 : java+jsp
	에디터 : sts4
	프론트엔드 프레임워크 : bootstrap
	백엔드 프레임워크 : spring boot
	백엔드 템플릿 : thymeleaf
	암호화 방식 : spring-security
	빌드 방식 : Maven build
	DBMS : Oracle 11g XE 
	DBMS Model : MVC Level 2(Model+Contoller+View+Service)
	Mapper : MyBatis + JPA
	Configuration : java(일부 xml)
	Server : Tomcat 9	
	....

	3. 프로젝트 설계
	- 프로젝트를 어떻게 구성할 것인가?
	- 데이터베이스 설계 -> 테이블 설계표와 ERD
	- 클래스 설계 -> DTO(VO)+DAO+CONTROLLER+SERVICE+UTIL 클래스 다이어그램과 시퀀스 다이어그램
	- 화면 설계 -> 프로토타입 및 스토리보드
	- 기능 및 흐름 설계 -> 흐름도

	4. 프로젝트 구현
	- 개발 및 운영환경 설정(프로젝트 환경 단계에서 정해진 대로 환경을 설정)
	- 화면 구현(화면요소인 html, css, javascript, jQuery, jsp에 대한 코딩)
	- 기능 단위 테스트(junit을 통한 세부기능별로 화면, 데이터베이스, 클래스, 데이터 입출력 테스트)
	- 데이터베이스 구현(SQL 에 대한 코딩)
	- 클래스 구현(java util, servlet, controller, service, dto에 대한 코딩)
	- 데이터 입출력 구현(dao에 대한 코딩)

	5. 프로젝트 테스트와 수정 및 보완
	- 인터페이스(UI) 테스트 : 화면 단위의 테스트
	- 애플리케이션 통합 테스트 : 모든 기능과 화면 요소에 대한 전반적인 테스트
	- 이슈도출 및 개선 : 화면에 대한 수정사항과, 코드 인스펙션 실시 후 개선할 내용을 계획을 수립하여 직접 개선

	6. 프로젝트 배포와 인계 절차
	- 애플리케이션 패키징(하나의 프로젝트로 묶음. war나 jar로 압축)
	- 애플리케이션 배포(원격에 의한 배포, FTP를 통한 배포, 텔넷과 같은 방식을 통한 배포, 버전관리툴을 통한 배포, 프로젝트 관리 도구를 통한 배포)
	- 인수 테스트 : 클라이언트에게 해당 프로젝트에 대한 시연을 시행하고, 확인 받은 후 해당 메뉴얼이나 가이드, 산출물을 전달하는 과정

	7. 프로젝트 완료
	- 계약된 내용대로 프로젝트가 진행되었는지 최종 확인
	- 프로젝트 버전 관리에 대한 내용을 정리
	- 개발자, 디자이너, 콘텐츠 제작자 등 별로 산출물 정리
	- 클라이언트에 대한 애플리케이션 교육을 실시
	- 사후 관리 및 운영, 긴급상황에 대한 조치 계약
	


	


	

	
	


		
	